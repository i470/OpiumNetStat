<Application x:Class="OpiumNetStat.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:resource="clr-namespace:OpiumNetStat.Controls"
             xmlns:local="clr-namespace:OpiumNetStat">
    <Application.Resources>
        <SolidColorBrush x:Key="PrimaryColor" Color="#59b369"/>
        <SolidColorBrush x:Key="PrimaryColorLight" Color="#a7c8ad"/>
        <SolidColorBrush x:Key="PrimaryColorDimmed" Color="#517f59"/>
        <SolidColorBrush x:Key="SecondaryColor" Color="#484c5e"/>
        <SolidColorBrush x:Key="SecondaryColorDark" Color="#282931"/>
        <SolidColorBrush x:Key="DarkBorder" Color="#2c2c31"/>
        <SolidColorBrush x:Key="SidebarTabBackgroundColor" Color="#34343d"/>
        <SolidColorBrush x:Key="SidebarBorderColor" Color="#494951"/>
        <SolidColorBrush x:Key="ModalBarColor" Color="#2b2c34"/>
        <SolidColorBrush x:Key="ModalContentColor" Color="#222329"/>
        <SolidColorBrush x:Key="PinFillColor" Color="#26272e"/>
        <SolidColorBrush x:Key="InactivePinStrokeColor" Color="#8c8c8e"/>
        <SolidColorBrush x:Key="ModalColor" Color="#222328"/>
        <SolidColorBrush x:Key="RedColor" Color="#f73737"/>
        <SolidColorBrush x:Key="WarningColor" Color="#ffcc00"/>
        <SolidColorBrush x:Key="GrayColor" Color="#80808d"/>
        <Color x:Key="PrimaryColorPlain">#59b369</Color>
        
        <Duration x:Key="DefaultDuration">0:0:.3</Duration>

        <Style x:Key="Fade" TargetType="{x:Type Control}">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Visibility" Value="Visible"/>
                        <Condition Property="resource:ControlExtension.Fadeable" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.0"
                                To="1.0"
                                Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                </MultiTrigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Visibility" Value="Hidden"/>
                        <Condition Property="resource:ControlExtension.Fadeable" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1.0"
                                To="0.0"
                                Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="Button" x:Key="ClearStyleButton" BasedOn="{StaticResource Fade}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                        SnapsToDevicePixels="True"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ConnectButtonOutterBorder" TargetType="Border">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="CornerRadius" Value="13"/>
            <Setter Property="BorderBrush" Value="#4B4B56"/>
            <Setter Property="BorderThickness" Value="3"/>
        </Style>
        <Style x:Key="ConnectButtonInnerBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="13"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource SidebarTabBackgroundColor}"/>
            <Setter Property="Margin" Value="-1"/>
        </Style>

        <ControlTemplate x:Key="ServerConnectButtonControlTemplate" TargetType="Button">
            <Border x:Name="ConnectButtonOutterBorder" Style="{StaticResource ConnectButtonOutterBorder}">
                <Border x:Name="ConnectButtonInnerBorder" Style="{StaticResource ConnectButtonInnerBorder}">
                    <Button Name="Button"
                        Style="{StaticResource ConnectButton}"
                        Padding="{TemplateBinding Padding}"
                        Command="{TemplateBinding Command}"
                        Height="{TemplateBinding Height}"
                        CommandParameter="{TemplateBinding CommandParameter}"/>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Connected}" Value="True">
                    <Setter TargetName="Button" Property="Content" Value="Unblock"/>
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Connected}" Value="False">
                    <Setter TargetName="Button" Property="Content" Value="Block"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                    <Setter TargetName="Button" Property="Content" Value="Upgrade"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="ConnectButtonOutterBorder" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                    <Setter TargetName="ConnectButtonInnerBorder" Property="Background" Value="{StaticResource PrimaryColor}"/>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Connected}" Value="True"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ConnectButtonOutterBorder" Property="BorderBrush" Value="Red"/>
                    <Setter TargetName="ConnectButtonInnerBorder" Property="Background" Value="Red"/>
                    <Setter TargetName="Button" Property="Foreground" Value="White"/>
                    <Setter TargetName="Button" Property="Content" Value="Unblock"/>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SidebarConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="Padding" Value="9,0,9,1"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Template" Value="{StaticResource ServerConnectButtonControlTemplate}"/>
        </Style>
        <Style x:Key="SidebarCountryConnectButton" BasedOn="{StaticResource SidebarConnectButton}" TargetType="Button">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Expanded}" Value="True"/>
                        <Condition Binding="{Binding Connected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SidebarServerConnectButton" TargetType="Button" BasedOn="{StaticResource SidebarConnectButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Server.Status}" Value="0">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RowButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
            <Setter Property="Foreground" Value="#FF830000"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="7,0"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
    </Application.Resources>
</Application>
