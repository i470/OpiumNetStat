<Application x:Class="OpiumNetStat.App"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/" 
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:OpiumNetStat" 
             xmlns:system="clr-namespace:System;assembly=System.Runtime">
    <Application.Resources>
        <ResourceDictionary>

                <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                    <!--<materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Lime" SecondaryColor="Pink" />-->
                    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                     <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
                     <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignLightTheme.xaml" />

                <!-- primary colors -->
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Blue.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}" />
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary600}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary600Foreground}" />
                </ResourceDictionary>

                <!-- accent color -->
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <SolidColorBrush x:Key="SecondaryHueMidBrush" Color="{StaticResource Accent400}" />
                    <SolidColorBrush x:Key="SecondaryHueMidForegroundBrush" Color="{StaticResource Accent400Foreground}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            
      

            <!--<SolidColorBrush x:Key="PrimaryColor" Color="#59b369"/>
            <SolidColorBrush x:Key="PrimaryColorLight" Color="#a7c8ad"/>
            <SolidColorBrush x:Key="PrimaryColorDimmed" Color="#517f59"/>
            <SolidColorBrush x:Key="SecondaryColor" Color="#484c5e"/>
            <SolidColorBrush x:Key="SecondaryColorDark" Color="#282931"/>
            <SolidColorBrush x:Key="DarkBorder" Color="#2c2c31"/>
            <SolidColorBrush x:Key="SidebarTabBackgroundColor" Color="#34343d"/>
            <SolidColorBrush x:Key="SidebarBorderColor" Color="#494951"/>
            <SolidColorBrush x:Key="ModalBarColor" Color="#2b2c34"/>
            <SolidColorBrush x:Key="ModalContentColor" Color="#222329"/>
            <SolidColorBrush x:Key="PinFillColor" Color="#26272e"/>
            <SolidColorBrush x:Key="InactivePinStrokeColor" Color="#8c8c8e"/>
            <SolidColorBrush x:Key="ModalColor" Color="#222328"/>
            <SolidColorBrush x:Key="RedColor" Color="#f73737"/>
            <SolidColorBrush x:Key="WarningColor" Color="#ffcc00"/>
            <SolidColorBrush x:Key="GrayColor" Color="#80808d"/>
            <Color x:Key="PrimaryColorPlain">#59b369</Color>

            <Duration x:Key="DefaultDuration">0:0:.3</Duration>


            --><!--TYPOGRAPHY --><!--


            <Style TargetType="{x:Type TextBlock}" x:Key="TextStyle">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,5" />

            </Style>

            <Style x:Key="h1" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextStyle}">
                <Setter Property="FontSize" Value="24" />
                <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
            </Style>

            --><!--WINDOW--><!--


            <RadialGradientBrush x:Key="WindowBG">
                <GradientStop Color="#FF34343D" Offset="1"/>
                <GradientStop Color="#FF72757A" Offset="0"/>
            </RadialGradientBrush>

            <SolidColorBrush x:Key="WindowBGSolid" Color="#FF34343D"/>


            <Style TargetType="{x:Type Window}" x:Key="WindowStyle">
                <Setter Property="Background" Value="{StaticResource WindowBGSolid}" />
                <Setter Property="Foreground" Value="WhiteSmoke" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Tunga" />
                <Setter Property="ResizeMode" Value="CanResize" />
                <Setter Property="WindowStyle" Value="None" />
            </Style>

            --><!--SCROLL BAR --><!--
            <SolidColorBrush x:Key="DarkControlBG" Color="#FF1B1B20"  />
            <SolidColorBrush x:Key="LightControlBG" Color="#FF72757A" />
            <system:Double x:Key="SrollBarCornerRadius">3</system:Double>
            <CornerRadius x:Key="ScrollBarCornerRadius">3</CornerRadius>


            <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="Border" Margin="0" Background="{StaticResource DarkControlBG}" BorderThickness="1">
                                <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                                Fill="{StaticResource LightControlBG}"
                                Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />

                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border CornerRadius="{StaticResource ScrollBarCornerRadius}"
                                Background="{StaticResource LightControlBG}"
                                BorderThickness="0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid Margin="5,10,5,10">
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="0" />
                        <RowDefinition Height="0.00001*" />
                        <RowDefinition MaxHeight="0" />
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="3"  CornerRadius="{StaticResource ScrollBarCornerRadius}"  Background="{StaticResource DarkControlBG}" />

                    <Track x:Name="PART_Track"  Grid.Row="1" IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}"  Margin="0">
                                <Thumb.BorderBrush>
                                    <SolidColorBrush Color="Transparent" />
                                </Thumb.BorderBrush>
                                <Thumb.Background>
                                    <SolidColorBrush Color="Transparent" />
                                </Thumb.Background>
                            </Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>

                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="0" />
                        <ColumnDefinition Width="0.00001*" />
                        <ColumnDefinition MaxWidth="0" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3"  CornerRadius="{StaticResource ScrollBarCornerRadius}"  Background="{StaticResource DarkControlBG}" />
                    <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="0"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
                    <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}"  Margin="0">
                                <Thumb.BorderBrush>
                                    <SolidColorBrush Color="Transparent" />
                                </Thumb.BorderBrush>
                                <Thumb.Background>
                                    <SolidColorBrush Color="Transparent" />
                                </Thumb.Background>
                            </Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="0" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
                </Grid>
            </ControlTemplate>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width"  Value="Auto" />
                        <Setter Property="Height" Value="18" />
                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="18" />
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            --><!-- TEMP STYLES--><!--
            <Style x:Key="Fade" TargetType="{x:Type Control}">
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Visibility" Value="Visible"/>
                            <Condition Property="resource:ControlExtension.Fadeable" Value="True"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.0"
                                To="1.0"
                                Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiTrigger.EnterActions>
                    </MultiTrigger>

                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Visibility" Value="Hidden"/>
                            <Condition Property="resource:ControlExtension.Fadeable" Value="True"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1.0"
                                To="0.0"
                                Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiTrigger.EnterActions>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>-->

            <Style TargetType="Button" x:Key="ClearStyleButton" BasedOn="{StaticResource Fade}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                        SnapsToDevicePixels="True"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        Padding="{TemplateBinding Padding}">
                                <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="ConnectButtonOutterBorder" TargetType="Border">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="CornerRadius" Value="13"/>
                <Setter Property="BorderBrush" Value="#4B4B56"/>
                <Setter Property="BorderThickness" Value="3"/>
            </Style>
            <Style x:Key="ConnectButtonInnerBorder" TargetType="Border">
                <Setter Property="CornerRadius" Value="13"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{StaticResource SidebarTabBackgroundColor}"/>
                <Setter Property="Margin" Value="-1"/>
            </Style>

            <ControlTemplate x:Key="ServerConnectButtonControlTemplate" TargetType="Button">
                <Border x:Name="ConnectButtonOutterBorder" Style="{StaticResource ConnectButtonOutterBorder}">
                    <Border x:Name="ConnectButtonInnerBorder" Style="{StaticResource ConnectButtonInnerBorder}">
                        <Button Name="Button"
                        Style="{StaticResource ConnectButton}"
                        Padding="{TemplateBinding Padding}"
                        Command="{TemplateBinding Command}"
                        Height="{TemplateBinding Height}"
                        CommandParameter="{TemplateBinding CommandParameter}"/>
                    </Border>
                </Border>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Connected}" Value="True">
                        <Setter TargetName="Button" Property="Content" Value="Unblock"/>
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Connected}" Value="False">
                        <Setter TargetName="Button" Property="Content" Value="Block"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                        <Setter TargetName="Button" Property="Content" Value="Upgrade"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}, Path=IsMouseOver}" Value="True">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Setter TargetName="ConnectButtonOutterBorder" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        <Setter TargetName="ConnectButtonInnerBorder" Property="Background" Value="{StaticResource PrimaryColor}"/>
                    </Trigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Connected}" Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="ConnectButtonOutterBorder" Property="BorderBrush" Value="Red"/>
                        <Setter TargetName="ConnectButtonInnerBorder" Property="Background" Value="Red"/>
                        <Setter TargetName="Button" Property="Foreground" Value="White"/>
                        <Setter TargetName="Button" Property="Content" Value="Unblock"/>
                    </MultiDataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="SidebarConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Padding" Value="9,0,9,1"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="Template" Value="{StaticResource ServerConnectButtonControlTemplate}"/>
            </Style>
            <Style x:Key="SidebarCountryConnectButton" BasedOn="{StaticResource SidebarConnectButton}" TargetType="Button">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Expanded}" Value="True"/>
                            <Condition Binding="{Binding Connected}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="SidebarServerConnectButton" TargetType="Button" BasedOn="{StaticResource SidebarConnectButton}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Server.Status}" Value="0">
                        <Setter Property="Visibility" Value="Hidden"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="RowButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
                <Setter Property="Foreground" Value="#FF830000"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="7,0"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>

</Application>
